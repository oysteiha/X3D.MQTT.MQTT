// Updated version 190207 using the session timer as base
import "timer.thingml"

object JTimerTask
@java_type "java.util.TimerTask";
object JTimer
@java_type "java.util.Timer";


// Manage a set of software timers.
thing TimerJava includes Timer
@pim "Timer"
@platform "java"
{
    property timer : JTimer
    property timer_task : JTimerTask
    
    function startTimer(delay : Integer) do
        timer = `new java.util.Timer()`
        `java.util.TimerTask temp_task = new java.util.TimerTask(){public void run(){`        	
        	timer!timer_timeout()
        `}};`
        timer_task = `temp_task`
        `` & timer & `.schedule(` & timer_task & `, ` & delay & `);`
    end
            
    function cancel() do
        if (not (timer_task == `null`)) do
            `` & timer_task & `.cancel();`
            `` & timer & `.purge();`            
        end    
    end

    statechart SoftTimer init default {
        state default {

          internal event m : timer?timer_start
            guard m.delay > 0
            action do
                startTimer(m.delay)
            end
            
          internal cancel
            event m : timer?timer_cancel
            action cancel()
        }
    }
}

